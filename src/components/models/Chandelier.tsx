/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [10.25KB] > /home/tesla/Documents/projects/next-14/portfolios/gltf/lamba/scene-transformed.glb [2.37MB] (-23058%)
Author: Ayouloo (https://sketchfab.com/Ayouloo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/lantern-8031e8417b1446fcb2d944709a8e80a7
Title: Lantern
*/

"use client";
import React, { useRef, RefObject } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { Group, Mesh, Object3D } from "three";

const Chandelier = React.memo(function Lamba(props) {
  const { nodes, materials } = useGLTF("/models/scene-transformed.glb");
  const modelRef: RefObject<Group> = useRef<Group>(null);

  useFrame((state) => {
    if (modelRef.current) {
      modelRef.current.position.y =
        -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;
      modelRef.current.rotation.y += 0.007;
    }
  });

  return (
    <group {...props} dispose={null} ref={modelRef}>
      {/* <mesh
        geometry={nodes.Flashlight_Metal_0.geometry}
        material={materials.Metal}
        rotation={[-Math.PI / 2, 0, 0]}
        position={[0, 2.5, 0]}
        scale={2}
      /> */}
      {nodes.Flashlight_Metal_0 && (
        <mesh
          geometry={(nodes.Flashlight_Metal_0 as Mesh).geometry}
          material={materials.Metal}
          rotation={[-Math.PI / 2, 0, 0]}
          position={[0, 2.5, 0]}
          scale={2}
        />
      )}

      {nodes.Flashlight_MetalAlpha_0 && (
        <mesh
          geometry={(nodes.Flashlight_MetalAlpha_0 as Mesh).geometry}
          material={materials.MetalAlpha}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={2}
          position={[0, 1, 0]}
        />
      )}
      {nodes.Flashlight_Glass_0 && (
        <mesh
          geometry={(nodes.Flashlight_Glass_0 as Mesh).geometry}
          material={materials.Glass}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={3}
          position={[0, 1.1, 0]}
        />
      )}
    </group>
  );
});

// useGLTF.preload("/scene-transformed.glb");

export default Chandelier;
